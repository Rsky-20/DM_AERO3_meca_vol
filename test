parent_path = pathlib.Path(__file__).parent.absolute()
print(parent_path)
print(sys.path)
path_data = "{}\\src\\data".format(parent_path)
path_lib = "{}\\src\\lib".format(parent_path)

sys.path.insert(0, path_data)
sys.path.insert(0, path_lib)

print(sys.path)

import_lib = path_lib.split("//")
import_data = path_data.split("//")

import atmosphere_lib as atmo
import data.data as dt



"""x = np.linspace(float(dataframe.values[4,-1]), dataframe.values[5,-1], 175)
        
        y = []
        for _ in range(175):
            y.append(13300)

        graph.plot(x, y, label = "Plafond de sus", color = "black")

        graph.set_xlabel("Vitesse de l'avion (m/s)")
        graph.set_ylabel("Altitude (m)")
        graph.set_title("Question 1 - Enveloppe de vol")

        graph.fill_between(dataframe['Vitesse min'], dataframe["Altitude"], where = dataframe['Vitesse min'] <= dataframe.values[4,-1], 
                           facecolor = "yellow", label = "Zone de vol")
        graph.fill_between(x, y, where = (x >= float(dataframe.values[4,-1])) & (x <= dataframe['Vitesse max'][0]), facecolor = "yellow")
        graph.fill_between(dataframe['Vitesse max'], y, 
                           where = (dataframe['Vitesse max'] >= dataframe['Vitesse max'][0]) & (dataframe['Vitesse max'] <= dataframe.values[5,-1]), 
                           facecolor = "yellow")
        graph.fill_between(dataframe['Vitesse max'], dataframe["Altitude"], 
                           where = (dataframe['Vitesse max'] >= dataframe['Vitesse max'][0]) & (dataframe['Vitesse max'] <= dataframe.values[5,-1]), 
                           facecolor = "white")
        
        V_min = dataframe['Vitesse min']
        
        dot = Ellipse((V_min[0], 0), width = 5, height = 500, edgecolor = "black")
        dot.set_facecolor("black")
        graph.add_patch(dot)
        graph.text(V_min[0] - 10, -500, f'V = {str([0])[0:6]}m/s')

        dot = Ellipse((dataframe.values[4,-1], 13300), width = 5, height = 500, edgecolor = "black")
        dot.set_facecolor("black")
        graph.add_patch(dot)
        graph.text(dataframe.values[4,-1] - 30, 13300 - 700, f'V = {str(dataframe.values[4,-1])[0:6]}m/s')

        V_max = dataframe['Vitesse max']

        dot = Ellipse((dataframe.values[5,-1], 13300), width = 5, height = 500, edgecolor = "black")
        dot.set_facecolor("black")
        graph.add_patch(dot)
        graph.text(dataframe.values[5,-1] + 10, 13300, f'V = {str(dataframe.values[5,-1])[0:6]}m/s')

        dot = Ellipse((V_max[0], 0), width = 5, height = 500, edgecolor = "black")
        dot.set_facecolor("black")
        graph.add_patch(dot)
        graph.text(V_max[0] - 10, -500, f'V = {str(V_max[0])[0:6]}m/s')
"""


        altitude = np.linspace(0, 13500, 175) #alt de 0 à 13500m avec un pas de 100m
        temp, pres, rho, v_min, v_max = [], [], [], [], []
        
        #On initialise la temp et la pres pour une alt donné
        for alt in altitude:
            temp.append(atmo.temperature(alt))
            pres.append(atmo.pressure(alt))
        
        for i in range(len(altitude)):
            rho.append(atmo.density(pres[i], temp[i]))
            
        for i in range(len(altitude)):
            v_min.append(aef.V_stol(dt.mass_max,dt.g,rho[i],dt.S,dt.Cz_max))
            v_max.append(aef.V_max(dt.mass_max,dt.g,rho[i],dt.S,aef.Cz_vmax(dt.k, dt.F(1, rho[i]),dt.mass_max, dt.g, dt.Cx0)))
            
        
        data = {'Altitude': altitude, 'Température': temp, 'Pression':pres, 'Densité':rho, 'Vitesse min': v_min, 'Vitesse max':v_max}
        dataframe = pd.DataFrame.from_dict(data)
        print(dataframe)

        
        graph = plt.subplot(111)
        #graph.plot(dataframe['Vitesse min'], dataframe["Altitude"], label = "Vitesse min", color = "blue")
        #graph.plot(dataframe['Vitesse max'], dataframe["Altitude"], label = "Vitesse max", color = "red")
        graph.plot(v_min, altitude, label = "Vitesse min", color = "blue")
        graph.plot(v_min, altitude, label = "Vitesse max", color = "red")
                
        v_min = np.array(v_min)
        x = np.linspace(float(v_min[-1]), v_max[-1], 175)
        y = []
        for _ in range(175):
            y.append(13300)

        graph.plot(x, y, label = "Plafond de sus", color = "black")

        graph.set_xlabel("Vitesse de l'avion (m/s)")
        graph.set_ylabel("Altitude (m)")
        graph.set_title("Question 1 - Enveloppe de vol")

        #graph.fill_between(v_min, altitude, where = v_min <= v_min[-1], facecolor = "yellow", label = "Zone de vol")
        #graph.fill_between(x, y, where = (x >= float(v_min[-1])) & (x <= v_max[0]), facecolor = "yellow")
        #graph.fill_between(v_max, y, where = (v_max >= v_max[0]) & (v_max <= v_max[-1]), facecolor = "yellow")
        #graph.fill_between(v_max, altitude, where = (v_max >= v_max[0]) & (v_max <= v_max[-1]), facecolor = "white")
        

        dot = Ellipse( (v_min[0], 0), width = 5, height = 500, edgecolor = "black")
        dot.set_facecolor("black")
        graph.add_patch(dot)
        graph.text(v_min[0] - 10, -500, f'V = {str(v_min[0])[0:6]}m/s')

        dot = Ellipse( (v_min[-1], 13300), width = 5, height = 500, edgecolor = "black")
        dot.set_facecolor("black")
        graph.add_patch(dot)
        graph.text(v_min[-1] - 30, 13300 - 700, f'V = {str(v_min[-1])[0:6]}m/s')

        dot = Ellipse( (v_max[-1], 13300), width = 5, height = 500, edgecolor = "black")
        dot.set_facecolor("black")
        graph.add_patch(dot)
        graph.text(v_max[-1] + 10, 13300, f'V = {str(v_max[-1])[0:6]}m/s')

        dot = Ellipse( (v_max[0], 0), width = 5, height = 500, edgecolor = "black")
        dot.set_facecolor("black")
        graph.add_patch(dot)
        graph.text(v_max[0] - 10, -500, f'V = {str(v_max[0])[0:6]}m/s')

        #print(V_min[0], V_min[-1], V_max[0], V_max[-1])

        graph.grid(True)
        graph.legend(loc = "upper left")
        plt.show()